<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.glacier.sys.mapper.MenuMapper">

    <sql id="menu_columns">
        a.id, a.name, a.url, a.perms,  a.type, a.open, a.status,  a.order_num,  a.icon,  a.parent_id,
        a.create_by, a.create_date, a.update_by, a.update_date, a.del_flag
    </sql>

    <select id="findMenusByRoleId" resultType="com.glacier.sys.entity.Menu">
        select
        <include refid="menu_columns"/>
        from sys_menu a
        inner join sys_role_menu b on a.id=b.menu_id
        <where>
            a.del_flag='0'
            and b.role_id = #{roleId}
        </where>
    </select>

    <select id="findMenusByUserId" resultType="com.glacier.sys.entity.Menu">
        select
        <include refid="menu_columns"/>
        from sys_menu a
        inner join sys_role_menu b on a.id=b.menu_id
        inner join sys_user_role c on c.role_id=b.role_id
        <where>
            a.del_flag='0'
            and exists (
            select 1 from sys_role r where r.del_flag='0' and r.id=b.role_id and r.status = '1'
            )
            and c.user_id = #{userId}
        </where>
    </select>

    <select id="findPermissionsByUserId" resultType="String">
        select a.perms
        from sys_menu a
        inner join sys_role_menu b on a.id=b.menu_id
        inner join sys_user_role c on c.role_id=b.role_id
        <where>
            a.del_flag='0'
            and exists (
            select 1 from sys_role r where r.del_flag='0' and r.id=b.role_id and r.status = '1'
            )
            and a.type = 3
            and c.user_id = #{userId}
        </where>
    </select>

    <select id="findAllPermissions" resultType="String">
        select a.perms
        from sys_menu a
        <where>
            a.del_flag='0'
            and a.type = 3
        </where>
    </select>
</mapper>